name: Lint

on: push

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "~1.19"
          check-latest: true

      - name: Run golangci
        uses: golangci/golangci-lint-action@v3.3.0

  lint-markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0

      - name: Lint mardkown files
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          ignore: './vendor'
          config: './.markdown-lint.yaml'
          args: '.'

  codeql-analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  snyk-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "~1.19"
          check-latest: true

      - name: Run golangci
        uses: golangci/golangci-lint-action@v3.3.0

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Run Snyk to check for vulnerabilities
        run: snyk test --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
